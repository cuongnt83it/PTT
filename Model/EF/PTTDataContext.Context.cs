//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PTTDataContext : DbContext
    {
        public PTTDataContext()
            : base("name=PTTDataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Builder> Builders { get; set; }
        public virtual DbSet<Business> Businesses { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CompetiorProduct> CompetiorProducts { get; set; }
        public virtual DbSet<Competitor> Competitors { get; set; }
        public virtual DbSet<Content> Contents { get; set; }
        public virtual DbSet<Contrator> Contrators { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<FeedbackInfor> FeedbackInfors { get; set; }
        public virtual DbSet<GrantPermission> GrantPermissions { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupUser> GroupUsers { get; set; }
        public virtual DbSet<Information> Information { get; set; }
        public virtual DbSet<InforUser> InforUsers { get; set; }
        public virtual DbSet<MenuType> MenuTypes { get; set; }
        public virtual DbSet<Messege> Messeges { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<Price> Prices { get; set; }
        public virtual DbSet<Process> Processes { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<ProjectBuilder> ProjectBuilders { get; set; }
        public virtual DbSet<ProjectCompetitor> ProjectCompetitors { get; set; }
        public virtual DbSet<ProjectContrator> ProjectContrators { get; set; }
        public virtual DbSet<ProjectProduct> ProjectProducts { get; set; }
        public virtual DbSet<ProjectSupplier> ProjectSuppliers { get; set; }
        public virtual DbSet<ProjectUser> ProjectUsers { get; set; }
        public virtual DbSet<Resource> Resources { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<V_Project_Builder> V_Project_Builder { get; set; }
        public virtual DbSet<V_Project_Builer_Contrator> V_Project_Builer_Contrator { get; set; }
        public virtual DbSet<V_Project_Compeitor> V_Project_Compeitor { get; set; }
        public virtual DbSet<V_Project_Contrator> V_Project_Contrator { get; set; }
        public virtual DbSet<V_Project_Messege> V_Project_Messege { get; set; }
        public virtual DbSet<V_Project_Process> V_Project_Process { get; set; }
        public virtual DbSet<V_Project_Products> V_Project_Products { get; set; }
        public virtual DbSet<V_Project_Supplier> V_Project_Supplier { get; set; }
        public virtual DbSet<V_Project_Users> V_Project_Users { get; set; }
    
        public virtual ObjectResult<string> proc_t_GenaraBuilderCode(string code, Nullable<byte> len)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var lenParameter = len.HasValue ?
                new ObjectParameter("len", len) :
                new ObjectParameter("len", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_t_GenaraBuilderCode", codeParameter, lenParameter);
        }
    
        public virtual ObjectResult<string> proc_t_GenaraCompetitorCode(string code, Nullable<byte> len)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var lenParameter = len.HasValue ?
                new ObjectParameter("len", len) :
                new ObjectParameter("len", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_t_GenaraCompetitorCode", codeParameter, lenParameter);
        }
    
        public virtual ObjectResult<string> proc_t_GenaraContratorCode(string code, Nullable<byte> len)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var lenParameter = len.HasValue ?
                new ObjectParameter("len", len) :
                new ObjectParameter("len", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_t_GenaraContratorCode", codeParameter, lenParameter);
        }
    
        public virtual ObjectResult<string> proc_t_GenaraProjectCode(string code, Nullable<byte> len)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var lenParameter = len.HasValue ?
                new ObjectParameter("len", len) :
                new ObjectParameter("len", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_t_GenaraProjectCode", codeParameter, lenParameter);
        }
    
        public virtual ObjectResult<string> proc_t_GenaraSupplierCode(string code, Nullable<byte> len)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var lenParameter = len.HasValue ?
                new ObjectParameter("len", len) :
                new ObjectParameter("len", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_t_GenaraSupplierCode", codeParameter, lenParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spGetSystemDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spGetSystemDate");
        }
    }
}
