@model Model.EF.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section ClienCSS{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Access/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <!-- daterange picker -->
    <link rel="stylesheet" href="~/Access/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!-- bootstrap datepicker -->
    <link rel="stylesheet" href="~/Access/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <script src="~/Access/js/plugins/ckfinder/ckfinder.js"></script>
    <script type="text/javascript">
        function BrowseServer(field) {
            editedField = field;
            var finder = new CKFinder();
            //finder.basePath = '../';
            finder.lang = 'vi'
            finder.selectActionFunction = SetFileField;
            finder.popup();
        }
        function SetFileField(fileUrl) {
            document.getElementById(editedField).value = fileUrl;
}


    </script>
}

@section FooterClienScript{

    <script src="~/Access/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!-- bootstrap datepicker -->
    <script src="~/Access/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <!-- bootstrap color picker -->
    <script src="~/Access/bower_components/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js"></script>
    <!-- bootstrap time picker -->
    <script src="~/Access/plugins/timepicker/bootstrap-timepicker.min.js"></script>
    <script>
  $(function () {


      //Date picker
      $('#BirthDay').datepicker({
          autoclose: true
          //format:'dd/mm/yyyy'
      })
      $('#DeadlineOfUsing').datepicker({
          autoclose: true
      })
      $('#LockedDate').datepicker({
          autoclose: true
      })

    })
    </script>
}

@section ContenHeader{
    <section class="content-header">
        <h1>
           Sửa thông tin người dùng
        </h1>
        <ol class="breadcrumb">
             <li><a href="~/Project/Create"><i class="fa fa-dashboard"></i> Đăng kí dự án</a></li>
        </ol>
    </section>
}
<div class="box">
    <div class="box-body">
        @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "form-horizontal" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model=>model.LoginID)
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Tài khoản", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Mật khẩu", Type = "Password" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Họ tên" })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Địa chỉ" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Email", Type = "Email" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BirthDay, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> { new SelectListItem { Text = "Nam", Value = "Nam" }, new SelectListItem { Text = "Nữ", Value = "Nữ" }, new SelectListItem { Text = "Khác", Value = "Khác" } }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Điện thoại" })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Image, new { @class = "form-control" })
                        <a href="#" class="btn btn-primary" onclick="BrowseServer('Image');">Chọn ảnh..</a>
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeadlineOfUsing, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DeadlineOfUsing, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.DeadlineOfUsing, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LockedUser, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.DropDownListFor(model => model.LockedUser, new List<SelectListItem> { new SelectListItem { Text = "Kính hoạt", Value = "false" }, new SelectListItem { Text = "Khóa", Value = "True" } }, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LockedUser, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LockedReason, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.LockedReason, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Lý do khóa" })
                        @Html.ValidationMessageFor(model => model.LockedReason, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LockedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.LockedDate, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.LockedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Ghi lại" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Quay lại", "Index", "User", new { @class = "btn btn-primary" })
        </div>
    </div>
</div>