@model Model.EF.Content
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section ClienCSS{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Access/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <script src="~/Access/js/plugins/ckfinder/ckfinder.js"></script>
<script src="~/Access/js/plugins/ckeditor/ckeditor.js"></script>

    <script type="text/javascript">
        function BrowseServer(field) {
            editedField = field;
            var finder = new CKFinder();
            //finder.basePath = '../';
           
            finder.lang = 'vi'
            finder.selectActionFunction = SetFileField;
            finder.popup();
        }
        function SetFileField(fileUrl) {
            document.getElementById(editedField).value = fileUrl;
        }


    </script>
}
@section FooterClienScript{

<script type="text/javascript">
   // var finder = new CKFinder();
    //finder.basePath = '../';

   //finder.lang = 'vi'
    //CKEDITOR.CKFinder = finder;
    CKEDITOR.replace('txtContent');
    $('#frmMesage').on('submit', function () {
        for (instance in CKEDITOR.instances) {
            CKEDITOR.instances[instance].updateElement();
        }
    });

</script>
    }
@section ContenHeader{
    <section class="content-header">
        <h1>
            Thêm mới thông báo
        </h1>
        <ol class="breadcrumb">
             <li><a href="~/Project/Create"><i class="fa fa-dashboard"></i> Đăng kí dự án</a></li>
        </ol>
    </section>
}
<div class="box">
    <div class="box-body">
        @using (Html.BeginForm("Create", "Mesage", FormMethod.Post, new { @class = "form-horizontal" , id="frmMesage"}))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name , new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Tiêu đề" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Mô tả" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Detail, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Nội dung" ,id = "txtContent" })
                        @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Image, new { @class = "form-control" })
                        <a href="#" class="btn btn-primary" onclick="BrowseServer('Image');">Chọn ảnh..</a>
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Status, new List<SelectListItem> { new SelectListItem { Text = "Kính hoạt", Value = "True" }, new SelectListItem { Text = "Khóa", Value = "false" } }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TopHot, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TopHot, new List<SelectListItem> { new SelectListItem { Text = "Tin hot", Value = "True" }, new SelectListItem { Text = "Không", Value = "false" } }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TopHot, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Tạo mới" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Quay lại", "Index", "Mesage", new { @class = "btn btn-primary" })
        </div>
    </div>
</div>