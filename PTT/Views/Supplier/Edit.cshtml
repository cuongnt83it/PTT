@model Model.EF.Supplier

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section ClienCSS{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Access/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <script src="~/Access/js/plugins/ckfinder/ckfinder.js"></script>
    <script type="text/javascript">
        function BrowseServer(field) {
            editedField = field;
            var finder = new CKFinder();
            //finder.basePath = '../';
            finder.lang = 'vi'
            finder.selectActionFunction = SetFileField;
            finder.popup();
        }
        function SetFileField(fileUrl) {
            document.getElementById(editedField).value = fileUrl;
        }


    </script>
}
@section FooterClienScript{
    <script src="~/Access/js/controller/supplierController.js"></script>

}
@section ContenHeader{
    <section class="content-header">
        <h1>
            Sửa thông tin nhà cung ứng
        </h1>
        <ol class="breadcrumb">
             <li><a href="~/Project/Create"><i class="fa fa-dashboard"></i> Đăng kí dự án</a></li>
        </ol>
    </section>
}
<div class="box">
    <div class="box-body">

        @using (Html.BeginForm("Edit", "Supplier", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.SupplierID, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Mã nhà cung ứng", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.SupplierName, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Tên nhà cung ứng" })
                        @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", @placeholder = "Đại diện nhà cung ứng" })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @placeholder = "Điện thoại" })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email", Type = "Email" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CityID, null, new { id = "Cities", @class = "form-control", @placeholder = "Thành phố" })
                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.DistrictID, null, new { id = "District", @class = "form-control", @placeholder = "Quận huyện" })
                        @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder = "Địa chỉ" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Image, new { @class = "form-control" })
                        <button class="btn btn-primary" type="button" onclick="BrowseServer('Image');">Chọn ảnh..</button>
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.Status, new List<SelectListItem> { new SelectListItem { Text = "Kính hoạt", Value = "True" }, new SelectListItem { Text = "Khóa", Value = "false" } }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Ghi lại" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }


        <div>
            @Html.ActionLink("Quay lại", "Index", "Supplier", new { @class = "btn btn-primary" })
        </div>
    </div>
</div>